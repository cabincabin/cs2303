#ifndef READFILE_H_
#define READFILE_H

/**extracts the maximum row size of a given file in xo life format
*@param fileName[] The name of the fie to extract the row size from
*@return the max row length of the given file.
*/
int getArrRow(char fileName[]);
/**extracts the maximum column size of a given file in xo life format
*@param fileName[] The name of the file to extract the row size from
*@return the max column length of the given file.
*/
int getArrCol(char fileName[]);

/**this creates a 2 dimentional array of the data stored,
*assuming the file is in the proper xo life format.
*@param fileName[] The name of the file to extract the array from
*@return a 2 dimentional array of the given file
*/
int** getArrToAppend(char fileName[]);

/**with a filename and a blank array of bounds generated by the max extents
*of the file, (row and column) fill in any spaces that contain x's in the array
*this is to account for arrays that are uneven in size, line by line.
*@param fileName[] The name of the file to extract the coordinates of life from
*@param genAppend The empty matrix to append "live" cells to.
*/
void updateArray(char fileName[], int ** genAppend);

#endif
